// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db.proto

package db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DBTrigger int32

const (
	DBTrigger_TRIGGER_1 DBTrigger = 0
	DBTrigger_TRIGGER_2 DBTrigger = 1
	DBTrigger_TRIGGER_3 DBTrigger = 2
)

var DBTrigger_name = map[int32]string{
	0: "TRIGGER_1",
	1: "TRIGGER_2",
	2: "TRIGGER_3",
}
var DBTrigger_value = map[string]int32{
	"TRIGGER_1": 0,
	"TRIGGER_2": 1,
	"TRIGGER_3": 2,
}

func (x DBTrigger) String() string {
	return proto.EnumName(DBTrigger_name, int32(x))
}
func (DBTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db_23446b14e58fbf51, []int{0}
}

type DatabaseTrigger struct {
	Trigger              DBTrigger `protobuf:"varint,1,opt,name=trigger,proto3,enum=db.DBTrigger" json:"trigger,omitempty"`
	Data1                string    `protobuf:"bytes,2,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2                []string  `protobuf:"bytes,3,rep,name=data2,proto3" json:"data2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DatabaseTrigger) Reset()         { *m = DatabaseTrigger{} }
func (m *DatabaseTrigger) String() string { return proto.CompactTextString(m) }
func (*DatabaseTrigger) ProtoMessage()    {}
func (*DatabaseTrigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_db_23446b14e58fbf51, []int{0}
}
func (m *DatabaseTrigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseTrigger.Unmarshal(m, b)
}
func (m *DatabaseTrigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseTrigger.Marshal(b, m, deterministic)
}
func (dst *DatabaseTrigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseTrigger.Merge(dst, src)
}
func (m *DatabaseTrigger) XXX_Size() int {
	return xxx_messageInfo_DatabaseTrigger.Size(m)
}
func (m *DatabaseTrigger) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseTrigger.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseTrigger proto.InternalMessageInfo

func (m *DatabaseTrigger) GetTrigger() DBTrigger {
	if m != nil {
		return m.Trigger
	}
	return DBTrigger_TRIGGER_1
}

func (m *DatabaseTrigger) GetData1() string {
	if m != nil {
		return m.Data1
	}
	return ""
}

func (m *DatabaseTrigger) GetData2() []string {
	if m != nil {
		return m.Data2
	}
	return nil
}

func init() {
	proto.RegisterType((*DatabaseTrigger)(nil), "db.DatabaseTrigger")
	proto.RegisterEnum("db.DBTrigger", DBTrigger_name, DBTrigger_value)
}

func init() { proto.RegisterFile("db.proto", fileDescriptor_db_23446b14e58fbf51) }

var fileDescriptor_db_23446b14e58fbf51 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x48, 0x49, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4a, 0x49, 0x52, 0x4a, 0xe3, 0xe2, 0x77, 0x49, 0x2c, 0x49,
	0x4c, 0x4a, 0x2c, 0x4e, 0x0d, 0x29, 0xca, 0x4c, 0x4f, 0x4f, 0x2d, 0x12, 0x52, 0xe7, 0x62, 0x2f,
	0x81, 0x30, 0x25, 0x18, 0x15, 0x18, 0x35, 0xf8, 0x8c, 0x78, 0xf5, 0x52, 0x92, 0xf4, 0x5c, 0x9c,
	0xa0, 0xf2, 0x41, 0x30, 0x59, 0x21, 0x11, 0x2e, 0xd6, 0x94, 0xc4, 0x92, 0x44, 0x43, 0x09, 0x26,
	0x05, 0x46, 0x0d, 0xce, 0x20, 0x08, 0x07, 0x26, 0x6a, 0x24, 0xc1, 0xac, 0xc0, 0x0c, 0x13, 0x35,
	0xd2, 0xb2, 0xe0, 0xe2, 0x84, 0x9b, 0x20, 0xc4, 0xcb, 0xc5, 0x19, 0x12, 0xe4, 0xe9, 0xee, 0xee,
	0x1a, 0x14, 0x6f, 0x28, 0xc0, 0x80, 0xcc, 0x35, 0x12, 0x60, 0x44, 0xe6, 0x1a, 0x0b, 0x30, 0x25,
	0xb1, 0x81, 0x1d, 0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x55, 0x68, 0x47, 0xb0, 0xb8, 0x00,
	0x00, 0x00,
}
